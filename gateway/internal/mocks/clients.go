// Code generated by MockGen. DO NOT EDIT.
// Source: .\internal\clients\clients.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/alserov/car_insurance/gateway/internal/service/models"
	gomock "github.com/golang/mock/gomock"
)

// MockInsuranceClient is a mock of InsuranceClient interface.
type MockInsuranceClient struct {
	ctrl     *gomock.Controller
	recorder *MockInsuranceClientMockRecorder
}

// MockInsuranceClientMockRecorder is the mock recorder for MockInsuranceClient.
type MockInsuranceClientMockRecorder struct {
	mock *MockInsuranceClient
}

// NewMockInsuranceClient creates a new mock instance.
func NewMockInsuranceClient(ctrl *gomock.Controller) *MockInsuranceClient {
	mock := &MockInsuranceClient{ctrl: ctrl}
	mock.recorder = &MockInsuranceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInsuranceClient) EXPECT() *MockInsuranceClientMockRecorder {
	return m.recorder
}

// CreateInsurance mocks base method.
func (m *MockInsuranceClient) CreateInsurance(ctx context.Context, insurance models.Insurance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInsurance", ctx, insurance)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateInsurance indicates an expected call of CreateInsurance.
func (mr *MockInsuranceClientMockRecorder) CreateInsurance(ctx, insurance interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInsurance", reflect.TypeOf((*MockInsuranceClient)(nil).CreateInsurance), ctx, insurance)
}

// GetInsuranceData mocks base method.
func (m *MockInsuranceClient) GetInsuranceData(ctx context.Context, addr string) (models.InsuranceData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInsuranceData", ctx, addr)
	ret0, _ := ret[0].(models.InsuranceData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInsuranceData indicates an expected call of GetInsuranceData.
func (mr *MockInsuranceClientMockRecorder) GetInsuranceData(ctx, addr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInsuranceData", reflect.TypeOf((*MockInsuranceClient)(nil).GetInsuranceData), ctx, addr)
}

// Payoff mocks base method.
func (m *MockInsuranceClient) Payoff(ctx context.Context, payoff models.Payoff) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Payoff", ctx, payoff)
	ret0, _ := ret[0].(error)
	return ret0
}

// Payoff indicates an expected call of Payoff.
func (mr *MockInsuranceClientMockRecorder) Payoff(ctx, payoff interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Payoff", reflect.TypeOf((*MockInsuranceClient)(nil).Payoff), ctx, payoff)
}
